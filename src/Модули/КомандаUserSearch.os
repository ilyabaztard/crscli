#Использовать crs-api

Процедура ОписаниеКоманды(Знач КомандаПриложения) Экспорт
	
	КомандаПриложения.Опция("u url", , "Строка подключения к хранилищу");
	КомандаПриложения.Опция("r reponame", , "Имя хранилища");
	КомандаПриложения.Опция("v version", , "Версия хранилища");
	КомандаПриложения.Опция("l login", , "Имя пользователя хранилища");
	КомандаПриложения.Опция("p password", , "Пароль пользователя хранилища");
	КомандаПриложения.Опция("s searchname", , "Имя пользователя, которого ищем");


КонецПроцедуры

Процедура ВыполнитьКоманду(Знач КомандаПриложения) Экспорт
	
	АдресХранилища = КомандаПриложения.ЗначениеОпции("url");
	ИмяХранилища = КомандаПриложения.ЗначениеОпции("reponame");
	ВерсияПлатформы = КомандаПриложения.ЗначениеОпции("version");
	Пользователь = КомандаПриложения.ЗначениеОпции("login");
	Пароль = КомандаПриложения.ЗначениеОпции("password");
	СтрПоиска = КомандаПриложения.ЗначениеОпции("searchname");
	
	КлиентХранилища = Новый КлиентХранилища(АдресХранилища, ВерсияПлатформы);
	КлиентХранилища.Подключиться(Пользователь, Пароль, ИмяХранилища);	
	
	ПользовательХранилища = КлиентХранилища.НайтиПользователя(СтрПоиска);

	Если ПользовательХранилища = Неопределено Тогда
		Сообщить("Не найден пользователь " + СтрПоиска);
		ЗавершитьРаботу(1);
	Иначе
		Сообщить(ПользовательХранилища.Идентификатор);
		ЗавершитьРаботу(0);
	КонецЕсли;
	
КонецПроцедуры
