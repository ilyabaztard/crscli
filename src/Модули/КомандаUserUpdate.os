#Использовать crs-api

Процедура ОписаниеКоманды(Знач КомандаПриложения) Экспорт
	
	КомандаПриложения.Опция("u url", , "Строка подключения к хранилищу");
	КомандаПриложения.Опция("r reponame", , "Имя хранилища");
	КомандаПриложения.Опция("v version", , "Версия хранилища");
	КомандаПриложения.Опция("l login", , "Имя пользователя хранилища");
	КомандаПриложения.Опция("p password", , "Пароль пользователя хранилища");

	КомандаПриложения.Опция("n username", , "Имя изменяемого пользователя");
	КомандаПриложения.Опция("w newusername", , "Новое имя пользователя");
	КомандаПриложения.Опция("q newuserpassword", , "Новый пароль пользователя");
	КомандаПриложения.Опция("e newrole", , "Новая роль пользователя")
		.ТПеречисление()
		.Перечисление("ТолькоПросмотр", РолиХранилища.ТолькоПросмотр, "дополнительных прав в хранилище не выдано")
		.Перечисление("Разработчик", РолиХранилища.Разработчик, "возможность захвата объектов в хранилище")
		.Перечисление("РазработчикРасширенный", РолиХранилища.РазработчикРасширенный, "возможность захвата объектов и изменения состава версий в хранилище")
		.Перечисление("Администратор", РолиХранилища.Администратор, "полные права без ограничений")
	;


КонецПроцедуры

Процедура ВыполнитьКоманду(Знач КомандаПриложения) Экспорт
	
	АдресХранилища = КомандаПриложения.ЗначениеОпции("url");
	ИмяХранилища = КомандаПриложения.ЗначениеОпции("reponame");
	ВерсияПлатформы = КомандаПриложения.ЗначениеОпции("version");
	Пользователь = КомандаПриложения.ЗначениеОпции("login");
	Пароль = КомандаПриложения.ЗначениеОпции("password");
	Имя = КомандаПриложения.ЗначениеОпции("username");
	ИмяНового = КомандаПриложения.ЗначениеОпции("newusername");
	ПарольНового = КомандаПриложения.ЗначениеОпции("newuserpassword");
	РольНового = КомандаПриложения.ЗначениеОпции("newrole");
	
	КлиентХранилища = Новый КлиентХранилища(АдресХранилища, ВерсияПлатформы);
	КлиентХранилища.Подключиться(Пользователь, Пароль, ИмяХранилища);	
	
	ПользовательХранилища = КлиентХранилища.НайтиПользователя(Имя);

	Если ПользовательХранилища = Неопределено Тогда
		Сообщить("Не найден пользователь " + Имя);
		ЗавершитьРаботу(1);
	КонецЕсли;

	Если ЗначениеЗаполнено(ИмяНового) Тогда
		ПользовательХранилища.Имя = ИмяНового;
	КонецЕсли;
	Если ЗначениеЗаполнено(ПарольНового) Тогда
		ПользовательХранилища.Пароль = ПарольНового;
	КонецЕсли;
	Если ЗначениеЗаполнено(РольНового) Тогда
		ПользовательХранилища.Роль = РольНового;
	КонецЕсли;
	
	КлиентХранилища.ОбновитьПользователяХранилища(ПользовательХранилища);

КонецПроцедуры
